[
    {
        "id": "07f8a25c0830f34b",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f9ec95d5.182698",
        "type": "subflow",
        "name": "Loops",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "ed9835d9.a0d528"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 640,
                "y": 40,
                "wires": [
                    {
                        "id": "e8a25e2.8cfcba",
                        "port": 0
                    }
                ]
            },
            {
                "x": 460,
                "y": 220,
                "wires": [
                    {
                        "id": "abf4f144.4b8cf",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "1d870caa61931310",
        "type": "junction",
        "z": "07f8a25c0830f34b",
        "x": 1340,
        "y": 320,
        "wires": [
            [
                "2a71f8004baedc06"
            ]
        ]
    },
    {
        "id": "495773711bc54681",
        "type": "junction",
        "z": "07f8a25c0830f34b",
        "x": 1340,
        "y": 360,
        "wires": [
            [
                "2a71f8004baedc06"
            ]
        ]
    },
    {
        "id": "84eeb6cc55caf098",
        "type": "junction",
        "z": "07f8a25c0830f34b",
        "x": 960,
        "y": 1680,
        "wires": [
            [
                "f44d179979807af4"
            ]
        ]
    },
    {
        "id": "ba0d7ed049b6f89a",
        "type": "junction",
        "z": "07f8a25c0830f34b",
        "x": 1000,
        "y": 320,
        "wires": [
            [
                "1d870caa61931310"
            ]
        ]
    },
    {
        "id": "9868f42c5df62a60",
        "type": "junction",
        "z": "07f8a25c0830f34b",
        "x": 580,
        "y": 260,
        "wires": [
            [
                "4ad6150402ca3164"
            ]
        ]
    },
    {
        "id": "cb70ef3a750b47c5",
        "type": "junction",
        "z": "07f8a25c0830f34b",
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "1181c53896831a36"
            ]
        ]
    },
    {
        "id": "45e8eb96811d44e0",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "StoredData",
        "name": "Server",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "timeout": "10",
        "rejectUnauthorized": true
    },
    {
        "id": "69cd019ed65ca5cd",
        "type": "mqtt-broker",
        "name": "",
        "broker": "51.15.243.241",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "07103d93bcf49e39",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f5ebc6ecc7b3e5de",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c2c26ff1c780d649",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "80ea243318a980fc",
        "type": "ui_group",
        "name": "Download",
        "tab": "f5ebc6ecc7b3e5de",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ed9835d9.a0d528",
        "type": "function",
        "z": "f9ec95d5.182698",
        "name": "InitiateLoop",
        "func": "var data = msg.payload;\nvar limit = data.length;\nflow.set(\"data\",data);\nflow.set(\"limit\",limit);\nmsg.topic = \"0\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 40,
        "wires": [
            [
                "e8a25e2.8cfcba"
            ]
        ]
    },
    {
        "id": "e8a25e2.8cfcba",
        "type": "function",
        "z": "f9ec95d5.182698",
        "name": "Loop",
        "func": "var data = flow.get(\"data\");\nvar count = parseInt(msg.topic);\nmsg.payload = data[count];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 40,
        "wires": [
            [
                "d43d401f.792b9"
            ]
        ]
    },
    {
        "id": "d511bc6c.32a9f",
        "type": "link in",
        "z": "f9ec95d5.182698",
        "name": "",
        "links": [
            "b5cf096a.121c68"
        ],
        "x": 215,
        "y": 80,
        "wires": [
            [
                "e8a25e2.8cfcba"
            ]
        ]
    },
    {
        "id": "d43d401f.792b9",
        "type": "link out",
        "z": "f9ec95d5.182698",
        "name": "",
        "links": [
            "977771ed.72992"
        ],
        "x": 395,
        "y": 80,
        "wires": []
    },
    {
        "id": "b5cf096a.121c68",
        "type": "link out",
        "z": "f9ec95d5.182698",
        "name": "",
        "links": [
            "d511bc6c.32a9f"
        ],
        "x": 615,
        "y": 180,
        "wires": []
    },
    {
        "id": "977771ed.72992",
        "type": "link in",
        "z": "f9ec95d5.182698",
        "name": "",
        "links": [
            "d43d401f.792b9"
        ],
        "x": 95,
        "y": 180,
        "wires": [
            [
                "9d78457f.e2e0b8"
            ]
        ]
    },
    {
        "id": "9d78457f.e2e0b8",
        "type": "function",
        "z": "f9ec95d5.182698",
        "name": "Increment",
        "func": "var limit = flow.get(\"limit\");\nvar count = parseInt(msg.topic);\ncount++;\nif(count>=limit){\n    msg.payload = null;\n}\nmsg.topic = String(count);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 200,
        "y": 180,
        "wires": [
            [
                "abf4f144.4b8cf"
            ]
        ]
    },
    {
        "id": "abf4f144.4b8cf",
        "type": "switch",
        "z": "f9ec95d5.182698",
        "name": "Continue?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "a8fb093d.4651c8"
            ],
            []
        ]
    },
    {
        "id": "a8fb093d.4651c8",
        "type": "delay",
        "z": "f9ec95d5.182698",
        "name": "",
        "pauseType": "delayv",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 500,
        "y": 180,
        "wires": [
            [
                "b5cf096a.121c68"
            ]
        ]
    },
    {
        "id": "2a71f8004baedc06",
        "type": "influxdb out",
        "z": "07f8a25c0830f34b",
        "influxdb": "45e8eb96811d44e0",
        "name": "",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1450,
        "y": 320,
        "wires": []
    },
    {
        "id": "8b8df2b7c6e8b5c5",
        "type": "mqtt in",
        "z": "07f8a25c0830f34b",
        "name": "",
        "topic": "iotaG/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "07103d93bcf49e39",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 320,
        "wires": [
            [
                "bac343801cee95f4",
                "5b14927ce78c7d6b",
                "2a3cf1d5a9a3baaa"
            ]
        ]
    },
    {
        "id": "d73132c58c4a2e58",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "func": "var res = [];\nvar arr = [];\nvar id = 0;\nvar json = {};\nif(msg.payload.length>=7){\n    for (let i = 0; i < msg.payload.length; i++) {\n        const element = msg.payload[i];\n        if(id!=element.id){\n            if(Object.keys(json).length){\n                arr.push(json);\n                for(let j = 0;j< Object.keys(json).length;j++){\n                    delete json[String(Object.keys(json)[j])];\n                }\n            }\n            json[\"ID\"] = element.id;\n            json[\"time\"] = (Date.now())*1000*1000;\n            id = element.id;\n        }\n        \n        switch (element[\"type\"]) {\n            case 16:\n                json[\"Tegangan\"] = element.data;\n                break;\n            case 18:\n                json[\"Arus\"] = element.data;\n                break;\n            case 30:\n                json[\"Daya\"] = element.data;\n                break;\n            case 32:\n                json[\"Energi\"] = element.data;\n                break;\n            case 31:\n                json[\"PowerFactor\"] = element.data;\n                break;\n            case 20:\n                json[\"Counter\"] = element.data;\n                break;\n            case 0:\n                json[\"Relay\"] = element.data;\n                break;\n            default:\n                break;\n        }\n    }\n    if (Object.keys(json).length) {\n        arr.push(json);\n    }\n    msg.measurement = \"KWH_METER\";\n    res.push(arr);\n}\nmsg.payload = res;\n\nreturn msg;\n\n// [{\"id\":8,\"type\":16,\"data\":200.768219},Tegangan\n// {\"id\":8,\"type\":18,\"data\":0.021974308}, Arus\n// {\"id\":8,\"type\":30,\"data\":0.33913222}, Daya\n// {\"id\":8,\"type\":32,\"data\":0}, Energi\n// {\"id\":8,\"type\":31,\"data\":99.2154007}, Power Factor\n// {\"id\":8,\"type\":20,\"data\":0}, Counter\n// {\"id\":8,\"type\":0,\"data\":1}] Relay",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "b97e2cab331b4e0d"
            ]
        ]
    },
    {
        "id": "bac343801cee95f4",
        "type": "json",
        "z": "07f8a25c0830f34b",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 320,
        "wires": [
            [
                "d73132c58c4a2e58"
            ]
        ]
    },
    {
        "id": "b97e2cab331b4e0d",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "measurement",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "KWH_METER",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 320,
        "wires": [
            [
                "ba3c098f29dc1a52"
            ]
        ]
    },
    {
        "id": "ba3c098f29dc1a52",
        "type": "change",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 320,
        "wires": [
            [
                "402e8b19172665e6"
            ]
        ]
    },
    {
        "id": "402e8b19172665e6",
        "type": "subflow:f9ec95d5.182698",
        "z": "07f8a25c0830f34b",
        "name": "",
        "x": 910,
        "y": 320,
        "wires": [
            [
                "a28a3bb72d555801",
                "bd45623fb187af3b",
                "e13936230ba31674",
                "01a58d135cabfc72",
                "ba0d7ed049b6f89a"
            ],
            []
        ]
    },
    {
        "id": "5b14927ce78c7d6b",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "REAL",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 220,
        "wires": []
    },
    {
        "id": "1a3270437b6040c6",
        "type": "inject",
        "z": "07f8a25c0830f34b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 410,
        "y": 440,
        "wires": [
            [
                "6e171bed9c73890c"
            ]
        ]
    },
    {
        "id": "6e171bed9c73890c",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "func": "\nmsg.payload = Randoms(10,50);\n\nlet seed = 123; // Sebuah seed awal\nfunction Randoms(min, max) {\n    // Parameter untuk LCG disesuaikan dengan uint8\n    const a = 17;\n    const c = 5;\n    const m = 256; // 2^8\n\n    // Menghasilkan angka pseudo-random baru\n    seed = (a * seed + c) % m;\n    flow.set(\"SEED\",seed);\n    const randomValue = min + (seed % (max - min + 1));\n    return [randomValue,seed];\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 440,
        "wires": [
            [
                "b822cff42ec0f1b5"
            ]
        ]
    },
    {
        "id": "b822cff42ec0f1b5",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 440,
        "wires": []
    },
    {
        "id": "4bab8f4199f8c2f1",
        "type": "inject",
        "z": "07f8a25c0830f34b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 520,
        "wires": [
            [
                "bf768d69f61c93f5"
            ]
        ]
    },
    {
        "id": "bf768d69f61c93f5",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": "function 1",
        "func": "flow.set(\"SEED\",123);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "a28a3bb72d555801",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "func": "msg.measurement += msg.payload.ID;\nmsg.payload[\"Tegangan\"] = msg.payload[\"Tegangan\"]*1.1;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 360,
        "wires": [
            [
                "495773711bc54681"
            ]
        ]
    },
    {
        "id": "bd45623fb187af3b",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "LOOP",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1050,
        "y": 180,
        "wires": []
    },
    {
        "id": "a2678d0b93e344c0",
        "type": "inject",
        "z": "07f8a25c0830f34b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "query",
                "v": "select * from KWH_METER18",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 470,
        "y": 580,
        "wires": [
            [
                "759d640330450ac3"
            ]
        ]
    },
    {
        "id": "759d640330450ac3",
        "type": "influxdb in",
        "z": "07f8a25c0830f34b",
        "influxdb": "45e8eb96811d44e0",
        "name": "",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 650,
        "y": 580,
        "wires": [
            [
                "c8274e80e33ad839"
            ]
        ]
    },
    {
        "id": "c8274e80e33ad839",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 580,
        "wires": []
    },
    {
        "id": "e13936230ba31674",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "func": "var datenow = (new Date()).toLocaleString();\nvar nodeawal = 256;\nvar nodeakhir = 270;\nvar awalmonth = Date.parse(String(datenow.split(\",\")[0].split(\"/\")[0])+\"/1/\"+String(datenow.split(\",\")[0].split(\"/\")[2])+\", 12:00:01 AM\");\nvar awalweek = Date.now();\nif(String((new Date)).split(\" \")[0] == \"Sun\"){\n    awalweek -= (3600*(24*6)*1000);\n}else if(String((new Date)).split(\" \")[0] == \"Sat\"){\n    awalweek -= (3600*(24*5)*1000);\n}else if(String((new Date)).split(\" \")[0] == \"Fri\"){\n    awalweek -= (3600*(24*4)*1000);\n}else if(String((new Date)).split(\" \")[0] == \"Thu\"){\n    awalweek -= (3600*(24*3)*1000);\n}else if(String((new Date)).split(\" \")[0] == \"Wed\"){\n    awalweek -= (3600*(24*2)*1000);\n}else if(String((new Date)).split(\" \")[0] == \"Tue\"){\n    awalweek -= (3600*(24*1)*1000);\n}\nawalweek = Date.parse(String(((new Date(awalweek)).toLocaleString().split(\",\")[0]+\", 12:00:01 AM\")));\nvar awalday = Date.parse(String((new Date(Date.now())).toLocaleString().split(\",\")[0]+\", 12:00:01 AM\"));\n\nmsg.query = \"\";\nfor (let index = nodeawal; index <= nodeakhir; index++) {\n    msg.query += \"SELECT * FROM KWH_METER\"+String(index)+\" where time >= \"+String(awalmonth*1000*1000)+\" order by time asc limit 1;\";\n}\nfor (let index = nodeawal; index <= nodeakhir; index++) {\n    msg.query += \"SELECT * FROM KWH_METER\"+String(index)+\" where time >= \"+String(awalweek*1000*1000)+\" order by time asc limit 1;\";\n}\nfor (let index = nodeawal; index <= nodeakhir; index++) {\n    msg.query += \"SELECT * FROM KWH_METER\"+String(index)+\" where time >= \"+String(awalday*1000*1000)+\" order by time asc limit 1;\";\n}\nfor (let index = nodeawal; index <= nodeakhir; index++) {\n    msg.query += \" SELECT * FROM KWH_METER\"+String(index)+\" order by time desc limit 1;\";\n}\nmsg.payload = msg.query.split(\";\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 280,
        "wires": [
            [
                "51be5cd363929ee3",
                "9780eebf2a392da7"
            ]
        ]
    },
    {
        "id": "51be5cd363929ee3",
        "type": "influxdb in",
        "z": "07f8a25c0830f34b",
        "influxdb": "45e8eb96811d44e0",
        "name": " ",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 1170,
        "y": 280,
        "wires": [
            [
                "cb70ef3a750b47c5",
                "0944dc96bb19fc1e"
            ]
        ]
    },
    {
        "id": "fa0b572782ebb245",
        "type": "influxdb in",
        "z": "07f8a25c0830f34b",
        "influxdb": "45e8eb96811d44e0",
        "name": "",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 430,
        "y": 940,
        "wires": [
            [
                "9b70d14745536b1f"
            ]
        ]
    },
    {
        "id": "c280e64ad1c857fb",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[0][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 640,
        "wires": []
    },
    {
        "id": "ea73ba79733bf913",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[1][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 700,
        "wires": []
    },
    {
        "id": "a08531247642ece6",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[2][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 760,
        "wires": []
    },
    {
        "id": "f97f1b034ead0c9d",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[3][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 820,
        "wires": []
    },
    {
        "id": "341076ceb9f645d0",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[4][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 880,
        "wires": []
    },
    {
        "id": "9ab3bc6308b37488",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[5][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 940,
        "wires": []
    },
    {
        "id": "171d0e86f615ecd1",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[6][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 1000,
        "wires": []
    },
    {
        "id": "56e4f18bf74461dd",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[7][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 1060,
        "wires": []
    },
    {
        "id": "f3d15447f0764fd1",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[8][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 1120,
        "wires": []
    },
    {
        "id": "4f22c83137804c83",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[9][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 1180,
        "wires": []
    },
    {
        "id": "e977bb6162ab3044",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[10][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 1240,
        "wires": []
    },
    {
        "id": "2663121f38656b08",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[11][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 1300,
        "wires": []
    },
    {
        "id": "9b70d14745536b1f",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "func": "for (let index = 0; index < 15; index++) {\n    const element = msg.payload[index];\n    flow.set(\"Device\"+String(index+256),element);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "4761907e114d8aa7",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "func": "var arr = [];\nfor (let index = 256; index <= 270; index++) {\n    try{\n    const element = flow.get(\"Device\"+String(index));\n    element[0][\"time\"] = Math.round((Date.now() - Date.parse(String(element[0].time)))/1000);\n    arr.push(element);\n    }catch(x){\n        arr.push(1);\n    }\n}\nmsg.payload = arr;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 980,
        "wires": [
            [
                "c280e64ad1c857fb",
                "ea73ba79733bf913",
                "a08531247642ece6",
                "f97f1b034ead0c9d",
                "341076ceb9f645d0",
                "9ab3bc6308b37488",
                "171d0e86f615ecd1",
                "56e4f18bf74461dd",
                "f3d15447f0764fd1",
                "4f22c83137804c83",
                "e977bb6162ab3044",
                "09103d9e8c44455a",
                "2663121f38656b08",
                "cdbb23d634f7f9d9",
                "196f19007ee76bcb",
                "686efa51dbebba41",
                "a688d4ef7135b13e",
                "5a4a99aef5c2031d",
                "50c7eca9ed106a10",
                "b6465b776fcfe5ee"
            ]
        ]
    },
    {
        "id": "9d0d6a6652ad3fa4",
        "type": "inject",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 980,
        "wires": [
            [
                "4761907e114d8aa7",
                "d5690f55e9d8b624"
            ]
        ]
    },
    {
        "id": "01a58d135cabfc72",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.ID",
        "targetType": "msg",
        "statusVal": "payload.ID",
        "statusType": "auto",
        "x": 1050,
        "y": 120,
        "wires": []
    },
    {
        "id": "09103d9e8c44455a",
        "type": "link out",
        "z": "07f8a25c0830f34b",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "a5097c95854c7213",
            "a9d3a27ee0ea9d78",
            "d9ee057d9773354b",
            "90bf6592979f743e",
            "4333c6729516484b",
            "b271e50a022d05eb",
            "8fef5e0c475cbf5c",
            "4e5babd9a9cee5b7",
            "f58e22185c2fcbe2",
            "c694577621e99761",
            "18cede81cb6f3185",
            "afbe3557da5c2ad4",
            "e7bf761d5678dadc",
            "9e3518d87e083455",
            "a0ab294b3502ae7b",
            "5ccbc85c88539263",
            "6ac5ddee842f6352",
            "cb6cb3cfd6df143e",
            "ae0055c1ece3d313"
        ],
        "x": 645,
        "y": 1040,
        "wires": []
    },
    {
        "id": "a5097c95854c7213",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 1",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 640,
        "wires": [
            [
                "6f9739f0efed16ee"
            ]
        ]
    },
    {
        "id": "de813c076fb40033",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP 8 - 7 - R",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1390,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "6f9739f0efed16ee",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[0][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 640,
        "wires": [
            [
                "de813c076fb40033"
            ]
        ]
    },
    {
        "id": "d9ee057d9773354b",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 2",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 700,
        "wires": [
            [
                "4720eca5487ad330"
            ]
        ]
    },
    {
        "id": "b25af0e0f622c3f6",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": "  LCP 8 - 8 - S",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1390,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "4720eca5487ad330",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[1][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 700,
        "wires": [
            [
                "b25af0e0f622c3f6"
            ]
        ]
    },
    {
        "id": "90bf6592979f743e",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 3",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 760,
        "wires": [
            [
                "25eed3e8e7889c7e"
            ]
        ]
    },
    {
        "id": "d944c8c28ee224d3",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP 8 - 9 - T",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1390,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "25eed3e8e7889c7e",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[2][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 760,
        "wires": [
            [
                "d944c8c28ee224d3"
            ]
        ]
    },
    {
        "id": "4333c6729516484b",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 4",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 820,
        "wires": [
            [
                "6c955dc08e82aff5"
            ]
        ]
    },
    {
        "id": "7449e27f6a21ec33",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP 3 - 10 - R",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1400,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "6c955dc08e82aff5",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[3][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 820,
        "wires": [
            [
                "7449e27f6a21ec33"
            ]
        ]
    },
    {
        "id": "b271e50a022d05eb",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 5",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 880,
        "wires": [
            [
                "cc460bb2e12d4b73"
            ]
        ]
    },
    {
        "id": "4e67271ba1b79dd0",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP 3 - 11 - S",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1400,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "cc460bb2e12d4b73",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[4][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 880,
        "wires": [
            [
                "4e67271ba1b79dd0"
            ]
        ]
    },
    {
        "id": "8fef5e0c475cbf5c",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 6",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 940,
        "wires": [
            [
                "e964349e4703d12d"
            ]
        ]
    },
    {
        "id": "0ef766ecc51e66d0",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP 3 - 12 - T",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1400,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "e964349e4703d12d",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[5][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 940,
        "wires": [
            [
                "0ef766ecc51e66d0"
            ]
        ]
    },
    {
        "id": "4e5babd9a9cee5b7",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 7",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 1000,
        "wires": [
            [
                "162d2442b87ee6c5"
            ]
        ]
    },
    {
        "id": "204f2c98bd9310f8",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP SLT - 13 - R",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1410,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "162d2442b87ee6c5",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[6][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1000,
        "wires": [
            [
                "204f2c98bd9310f8"
            ]
        ]
    },
    {
        "id": "f58e22185c2fcbe2",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 8",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 1060,
        "wires": [
            [
                "a3032e09cd9341b4"
            ]
        ]
    },
    {
        "id": "e2fa36d8d83836a9",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP SLT - 14 - S",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1410,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "a3032e09cd9341b4",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[7][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1060,
        "wires": [
            [
                "e2fa36d8d83836a9"
            ]
        ]
    },
    {
        "id": "c694577621e99761",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 9",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 1120,
        "wires": [
            [
                "10241419360391c5"
            ]
        ]
    },
    {
        "id": "402be65208896f45",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP SLT - 15 - T",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1410,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "10241419360391c5",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[8][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1120,
        "wires": [
            [
                "402be65208896f45"
            ]
        ]
    },
    {
        "id": "18cede81cb6f3185",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 10",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 1180,
        "wires": [
            [
                "dfcb90792da9deb0"
            ]
        ]
    },
    {
        "id": "fc750488701f7e46",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP Entry - 16 - R",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1410,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "dfcb90792da9deb0",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[9][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1180,
        "wires": [
            [
                "fc750488701f7e46"
            ]
        ]
    },
    {
        "id": "afbe3557da5c2ad4",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 11",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 1240,
        "wires": [
            [
                "7196dc981c654975"
            ]
        ]
    },
    {
        "id": "3adbacdb7d1df7f4",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP Entry - 17 - S",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1410,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "7196dc981c654975",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[10][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1240,
        "wires": [
            [
                "3adbacdb7d1df7f4"
            ]
        ]
    },
    {
        "id": "e7bf761d5678dadc",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 12",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 1300,
        "wires": [
            [
                "df725078ca84fcdc"
            ]
        ]
    },
    {
        "id": "7d1d30b077cd137e",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP Entry - 18 - T",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1410,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "df725078ca84fcdc",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[11][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1300,
        "wires": [
            [
                "7d1d30b077cd137e"
            ]
        ]
    },
    {
        "id": "d5690f55e9d8b624",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "func": "msg.query = \"\";\nfor (let index = 256; index <= 270; index++) {\n    msg.query += \"SELECT * FROM KWH_METER\"+String(index)+\" order by time desc limit 1;\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 940,
        "wires": [
            [
                "fa0b572782ebb245"
            ]
        ]
    },
    {
        "id": "2a3cf1d5a9a3baaa",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "ID",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[0].id",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 370,
        "y": 160,
        "wires": []
    },
    {
        "id": "497c3558983203c5",
        "type": "http in",
        "z": "07f8a25c0830f34b",
        "name": "",
        "url": "/Download",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 1640,
        "wires": [
            [
                "cbc7abe51456948d"
            ]
        ]
    },
    {
        "id": "f44d179979807af4",
        "type": "http response",
        "z": "07f8a25c0830f34b",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1050,
        "y": 1640,
        "wires": []
    },
    {
        "id": "cbc7abe51456948d",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "func": "var d = msg.payload;\nvar parameter = ['from','to','device'];\nfor (let i = 0; i < parameter.length; i++) {\n    const element = parameter[i];\n    if(d[String(element)] == undefined){\n        msg.payload = \"'\"+String(parameter)+\"' Parameter empty\";\n        return msg;\n    }\n}\nvar devicelist = \"\";\nif(d[parameter[2]]==\"LCP_8\"){\n    devicelist = \"KWH_METER7,KWH_METER8,KWH_METER9\";\n}else if(d[parameter[2]]==\"LCP_3\"){\n    devicelist = \"KWH_METER10,KWH_METER11,KWH_METER12\";\n}else if(d[parameter[2]]==\"LCP_2\"){\n    devicelist = \"KWH_METER13,KWH_METER14,KWH_METER15\";\n}else if(d[parameter[2]]==\"LCP_Entry\"){\n    devicelist = \"KWH_METER16,KWH_METER17,KWH_METER18\";\n}else{\n    msg.payload = \"device not found\";\n    return msg;\n}\nmsg.panel = d[parameter[2]];\nmsg.dvc = devicelist;\nmsg.frm = Date.parse(d['from']);\nmsg.to = Date.parse(d['to']);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1640,
        "wires": [
            [
                "91226ac9d95dbb2e",
                "331c7abe283ba1d3"
            ]
        ]
    },
    {
        "id": "3f396c34b3090fef",
        "type": "inject",
        "z": "07f8a25c0830f34b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 350,
        "y": 1980,
        "wires": [
            [
                "6aa9e1a392f59622"
            ]
        ]
    },
    {
        "id": "fa5d35a1070aa1db",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 1980,
        "wires": []
    },
    {
        "id": "6aa9e1a392f59622",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": "function 2",
        "func": "msg.payload = Date.parse(\"7/11/2024, 8:27:35 AM \");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2080,
        "wires": [
            [
                "fa5d35a1070aa1db"
            ]
        ]
    },
    {
        "id": "91226ac9d95dbb2e",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "func": "msg.query = \"\";\nvar dvc = msg.dvc.split(\",\");\nvar frm = msg['frm']*1000*1000;\nvar to = msg['to']*1000*1000;\nfor (let index = 0; index < dvc.length; index++) {\n    const element = dvc[index];\n    msg.query += \"SELECT * FROM \"+String(element);\n    msg.query += \" WHERE time >= \"+String(frm);\n    msg.query += \" AND time <= \"+String(to);\n    msg.query += \";\";\n}\nmsg.payload = msg.query;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1640,
        "wires": [
            [
                "3b23e754248caa7d"
            ]
        ]
    },
    {
        "id": "3b23e754248caa7d",
        "type": "influxdb in",
        "z": "07f8a25c0830f34b",
        "influxdb": "45e8eb96811d44e0",
        "name": "",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 730,
        "y": 1640,
        "wires": [
            [
                "62678e8334e165ee"
            ]
        ]
    },
    {
        "id": "62678e8334e165ee",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "func": "var d = msg.payload;\nvar res = [];\nfor (let i = 0; i < d.length; i++) {\n    for (let j = 0; j < d[i].length; j++) {\n        d[i][j][\"epochtime\"] = Date.parse(d[i][j].time);\n        delete d[i][j][\"time\"];\n        if(i==0){\n            d[i][j][\"ID\"] = \"R\";\n        }else if(i==1){\n            d[i][j][\"ID\"] = \"S\";\n        }else if(i==2){\n            d[i][j][\"ID\"] = \"T\";\n        }\n        d[i][j][\"Panel\"] = msg.panel;\n        res.push(d[i][j]);\n    }\n}\nmsg.payload = res;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1640,
        "wires": [
            [
                "f44d179979807af4",
                "475ba4ab7cdc8fc5"
            ]
        ]
    },
    {
        "id": "331c7abe283ba1d3",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "empty",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 1680,
        "wires": [
            [
                "84eeb6cc55caf098"
            ]
        ]
    },
    {
        "id": "63a72e74bfde85b9",
        "type": "influxdb in",
        "z": "07f8a25c0830f34b",
        "influxdb": "45e8eb96811d44e0",
        "name": "",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 500,
        "y": 1820,
        "wires": [
            [
                "f18734933ce58518"
            ]
        ]
    },
    {
        "id": "be21c2117808084c",
        "type": "inject",
        "z": "07f8a25c0830f34b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "query",
                "v": "select * from KWH_METER7 order by time desc limit 10",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 310,
        "y": 1820,
        "wires": [
            [
                "63a72e74bfde85b9"
            ]
        ]
    },
    {
        "id": "f18734933ce58518",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": "function 3",
        "func": "var dd = msg.payload;\nvar d = [];\nfor (let i = msg.payload.length-1; i >= 0; i--) {\n    d.push(msg.payload[i]);\n}\nvar incCounter = [];\nvar avgDaya = [];\nvar deltatime = [];\nvar wH = [];\n\nfor (let i = 0; i < d.length; i++) {\n    if(i>0){\n        incCounter.push(Math.abs(d[i].Counter-d[i-1].Counter));\n        avgDaya.push((d[i].Daya+d[i-1].Daya)/2);\n        deltatime.push(Math.round(Math.abs(Date.parse(String(d[i].time))-Date.parse(String(d[i-1].time)))/1000)/60/60);\n    }\n}\nfor (let i = 0; i < avgDaya.length; i++) {\n    wH.push((avgDaya[i]*deltatime[i])/incCounter[i]);\n}\nmsg.payload = [d,incCounter,avgDaya,deltatime,wH];\nvar whmax = 0;\nvar whmin = 0;\nfor (let i = 0; i  < wH.length; i++) {\n    if(wH[i]>whmax){\n        whmax = wH[i];\n    }\n    if(wH[i]<whmin || !whmin){\n        whmin = wH[i];\n    }\n}\nmsg.payload = {\n    \"DataReal\":d,\n    \"incrementCounter\":incCounter,\n    \"AverageWatt\":avgDaya,\n    \"/60/60(Detik ke jam)\":deltatime,\n    \"Wh per 1000 counter\":wH,\n    \"MAX Wh\":whmax,\n    \"MIN Wh\":whmin\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1820,
        "wires": [
            [
                "4f73d3a738b29469"
            ]
        ]
    },
    {
        "id": "4f73d3a738b29469",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 1820,
        "wires": []
    },
    {
        "id": "475ba4ab7cdc8fc5",
        "type": "excel",
        "z": "07f8a25c0830f34b",
        "name": "xlsx",
        "file": "/home/ubuntu/excel/output.xlsx",
        "x": 1060,
        "y": 1680,
        "wires": [
            [
                "fb9a45975fecb817"
            ]
        ]
    },
    {
        "id": "fb9a45975fecb817",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 1660,
        "wires": []
    },
    {
        "id": "0944dc96bb19fc1e",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "func": "\n//Monthly\nconsole.log(\"Start\");\nvar panelQty = 5;\n\nvar pastMonthEnergi = {};\nvar pastWeekEnergi = {};\nvar pastDayEnergi = {};\nvar nowDayEnergi = {};\nfor (let j = 0; j < panelQty; j++) {\n    pastMonthEnergi[\"Panel\"+ String(j + 1)] = 0;\n    pastWeekEnergi[\"Panel\" + String(j + 1)] = 0;\n    pastDayEnergi[\"Panel\" + String(j + 1)] = 0;\n    nowDayEnergi[\"Panel\" + String(j + 1)] = 0;\n    try{\n        for (let i = ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 0)); i < ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 0)+1); i++) { //0 1 2\n        pastMonthEnergi[\"Panel\" + String(j+1)] += msg.payload[i][0].Counter;\n    }   \n    }catch(x){\n        pastMonthEnergi[\"Panel\" + String(j+1)] = msg.payload[j+(msg.payload.length*(75/100))][0].Counter;\n    } \n\n    try {\n        for (let i = ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 1)); i < ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 1) + 1); i++) { //0 1 2\n            pastWeekEnergi[\"Panel\" + String(j + 1)] += msg.payload[i][0].Counter;\n        }\n    } catch (x) {\n        pastWeekEnergi[\"Panel\" + String(j + 1)] = msg.payload[j + (msg.payload.length * (75 / 100))][0].Counter;\n    }\n\n    try {\n        for (let i = ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 2)); i < ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 2) + 1); i++) { //0 1 2\n            pastDayEnergi[\"Panel\" + String(j + 1)] += msg.payload[i][0].Counter;\n        }\n    } catch (x) {\n        pastDayEnergi[\"Panel\" + String(j + 1)] = msg.payload[j + (msg.payload.length * (75 / 100))][0].Counter;\n    }\n\n    try {\n        for (let i = ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 3)); i < ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 3) + 1); i++) { //0 1 2\n            nowDayEnergi[\"Panel\" + String(j + 1)] += msg.payload[i][0].Counter;\n        }\n    } catch (x) {\n        nowDayEnergi[\"Panel\" + String(j + 1)] = msg.payload[j + (msg.payload.length * (75 / 100))][0].Counter;\n    }\n}\n//-----------------------------------------------------------------------------------------\nvar pastMonthPF = {};\nvar pastWeekPF = {};\nvar pastDayPF = {};\nvar nowDayPF = {};\nfor (let j = 0; j < panelQty; j++) {\n    pastMonthPF[\"Panel\" + String(j + 1)] = 0;\n    pastWeekPF[\"Panel\" + String(j + 1)] = 0;\n    pastDayPF[\"Panel\" + String(j + 1)] = 0;\n    nowDayPF[\"Panel\" + String(j + 1)] = 0;\n    try {\n        for (let i = ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 0)); i < ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 0) + 1); i++) { //0 1 2\n            pastMonthPF[\"Panel\" + String(j + 1)] += msg.payload[i][0].PowerFactor;\n        }\n    } catch (x) {\n        pastMonthPF[\"Panel\" + String(j + 1)] = msg.payload[j + (msg.payload.length * (75 / 100))][0].PowerFactor;\n    }\n\n    try {\n        for (let i = ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 1)); i < ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 1) + 1); i++) { //0 1 2\n            pastWeekPF[\"Panel\" + String(j + 1)] += msg.payload[i][0].PowerFactor;\n        }\n    } catch (x) {\n        pastWeekPF[\"Panel\" + String(j + 1)] = msg.payload[j + (msg.payload.length * (75 / 100))][0].PowerFactor;\n    }\n\n    try {\n        for (let i = ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 2)); i < ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 2) + 1); i++) { //0 1 2\n            pastDayPF[\"Panel\" + String(j + 1)] += msg.payload[i][0].PowerFactor;\n        }\n    } catch (x) {\n        pastDayPF[\"Panel\" + String(j + 1)] = msg.payload[j + (msg.payload.length * (75 / 100))][0].PowerFactor;\n    }\n\n    try {\n        for (let i = ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 3)); i < ((msg.payload.length / 4) / panelQty) * (j + (panelQty * 3) + 1); i++) { //0 1 2\n            nowDayPF[\"Panel\" + String(j + 1)] += msg.payload[i][0].PowerFactor;\n        }\n    } catch (x) {\n        nowDayPF[\"Panel\" + String(j + 1)] = msg.payload[j + (msg.payload.length * (75 / 100))][0].PowerFactor;\n    }\n}\n\nvar totalEnergi = 0;\nvar totalPowerFactor = 0;\nvar totalTegangan = 0;\nvar totalDaya = 0;\nvar rataPowerFactor = 0 ;\nvar rataTegangan = 0;\n\nfor (let index = (msg.payload.length*(75/100)); index < msg.payload.length; index++) {\n    totalEnergi += msg.payload[index][0].Counter;\n    totalPowerFactor += msg.payload[index][0].PowerFactor;\n    totalDaya += msg.payload[index][0].Daya;\n    totalTegangan += msg.payload[index][0].Tegangan;\n}\nrataPowerFactor = totalPowerFactor / (msg.payload.length * (25 / 100));\nrataTegangan = (totalTegangan / (msg.payload.length * (25 / 100)));\n\nmsg.payload = {\n    \"time\": (Date.now())*1000*1000,\n    \"TotalEnergi\" : totalEnergi, // + Math.round((Math.random())*10),\n    \"RataPowerFactor\": rataPowerFactor, //+ Math.round((Math.random()) * 10),\n    \"TotalDaya\": totalDaya,\n    \"RataTegangan\": rataTegangan,\n    // \"EnergiPanelMonth1\":nowenergipanel1-pastmonthenergipanel1,\n    // \"EnergiPanelWeek1\":nowenergipanel1-pastweekenergipanel1,\n    // \"EnergiPanelDay1\":nowenergipanel1-pastdayenergipanel1,\n    // \"EnergiPanelMonth2\":nowenergipanel2-pastmonthenergipanel2,\n    // \"EnergiPanelWeek2\":nowenergipanel2-pastweekenergipanel2,\n    // \"EnergiPanelDay2\":nowenergipanel2-pastdayenergipanel2,\n    // \"EnergiPanelMonth3\":nowenergipanel3-pastmonthenergipanel3,\n    // \"EnergiPanelWeek3\":nowenergipanel3-pastweekenergipanel3,\n    // \"EnergiPanelDay3\":nowenergipanel3-pastdayenergipanel3,\n    // \"EnergiPanelMonth4\":nowenergipanel4-pastmonthenergipanel4,\n    // \"EnergiPanelWeek4\":nowenergipanel4-pastweekenergipanel4,\n    // \"EnergiPanelDay4\":nowenergipanel4-pastdayenergipanel4,\n    \"AllPanelMonth\":0,//(nowenergipanel1-pastmonthenergipanel1)+(nowenergipanel2-pastmonthenergipanel2)+(nowenergipanel3-pastmonthenergipanel3)+(nowenergipanel4-pastmonthenergipanel4),\n    \"AllPanelWeek\":0,//(nowenergipanel1-pastweekenergipanel1)+(nowenergipanel2-pastweekenergipanel2)+(nowenergipanel3-pastweekenergipanel3)+(nowenergipanel4-pastweekenergipanel4),\n    \"AllPanelDay\":0//(nowenergipanel1-pastdayenergipanel1)+(nowenergipanel2-pastdayenergipanel2)+(nowenergipanel3-pastdayenergipanel3)+(nowenergipanel4-pastdayenergipanel4)\n}\nfor (let i = 1; i <= panelQty; i++) {\n    msg.payload[\"EnergiPanelMonth\" + String(i)] = nowDayEnergi[\"Panel\" + String(i)] - pastMonthEnergi[\"Panel\"+String(i)];\n    msg.payload[\"EnergiPanelWeek\" + String(i)] = nowDayEnergi[\"Panel\" + String(i)] - pastWeekEnergi[\"Panel\" + String(i)];\n    msg.payload[\"EnergiPanelDay\" + String(i)] = nowDayEnergi[\"Panel\" + String(i)] - pastDayEnergi[\"Panel\" + String(i)];\n    msg.payload[\"AvgEnergiPanel\" + String(i)] = nowDayEnergi[\"Panel\" + String(i)] / 3;\n    msg.payload[\"AvgPFPanel\" + String(i)] = nowDayPF[\"Panel\" + String(i)] / 3;\n    msg.payload[\"AllPanelMonth\"] += msg.payload[\"EnergiPanelMonth\" + String(i)];\n    msg.payload[\"AllPanelWeek\"] += msg.payload[\"EnergiPanelWeek\" + String(i)];\n    msg.payload[\"AllPanelDay\"] += msg.payload[\"EnergiPanelDay\" + String(i)];\n}\nmsg.measurement = \"AllDataNow\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 280,
        "wires": [
            [
                "9b75e9ed63840527",
                "2a71f8004baedc06"
            ]
        ]
    },
    {
        "id": "f19cce407801188b",
        "type": "excel",
        "z": "07f8a25c0830f34b",
        "name": "xlsx",
        "file": "/home/ubuntu/excel/BackupAll.xlsx",
        "x": 1050,
        "y": 1760,
        "wires": [
            [
                "fb9a45975fecb817"
            ]
        ]
    },
    {
        "id": "6f9474d2acf2bfcd",
        "type": "influxdb in",
        "z": "07f8a25c0830f34b",
        "influxdb": "45e8eb96811d44e0",
        "name": "",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 710,
        "y": 1760,
        "wires": [
            [
                "37c02ff5b134bce5"
            ]
        ]
    },
    {
        "id": "070d700d41bff6b8",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP Entry - 19 - R",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1830,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "90ac7ece0ea38cc0",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[12][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1670,
        "y": 1180,
        "wires": [
            [
                "070d700d41bff6b8"
            ]
        ]
    },
    {
        "id": "9e3518d87e083455",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 13",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1575,
        "y": 1180,
        "wires": [
            [
                "90ac7ece0ea38cc0"
            ]
        ]
    },
    {
        "id": "2f20fa6a3c987a5a",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP Entry - 20 - S",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1830,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "860c7f50e1992a21",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[13][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1670,
        "y": 1220,
        "wires": [
            [
                "2f20fa6a3c987a5a"
            ]
        ]
    },
    {
        "id": "a0ab294b3502ae7b",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 14",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1575,
        "y": 1220,
        "wires": [
            [
                "860c7f50e1992a21"
            ]
        ]
    },
    {
        "id": "e46b54beb850f67a",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[14][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1670,
        "y": 1260,
        "wires": [
            [
                "dc1ccfd6b61b06f6"
            ]
        ]
    },
    {
        "id": "5ccbc85c88539263",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 15",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1575,
        "y": 1260,
        "wires": [
            [
                "e46b54beb850f67a"
            ]
        ]
    },
    {
        "id": "dc1ccfd6b61b06f6",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP Entry - 21 - T",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1830,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "cdbb23d634f7f9d9",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[12][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 790,
        "y": 1240,
        "wires": []
    },
    {
        "id": "196f19007ee76bcb",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[13][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 790,
        "y": 1280,
        "wires": []
    },
    {
        "id": "686efa51dbebba41",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[14][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 790,
        "y": 1320,
        "wires": []
    },
    {
        "id": "4ad6150402ca3164",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": "function 4",
        "func": "msg.payload = msg.payload.ID;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 140,
        "wires": [
            [
                "a440d6c1e82fa3f2",
                "50843b0b5640ec33"
            ]
        ]
    },
    {
        "id": "a440d6c1e82fa3f2",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 860,
        "y": 140,
        "wires": []
    },
    {
        "id": "50843b0b5640ec33",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "19",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "20",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "21",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 710,
        "y": 220,
        "wires": [
            [
                "14ba0947d7ac64ca"
            ],
            [
                "14ba0947d7ac64ca"
            ],
            [
                "14ba0947d7ac64ca"
            ]
        ]
    },
    {
        "id": "14ba0947d7ac64ca",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 880,
        "y": 200,
        "wires": []
    },
    {
        "id": "1181c53896831a36",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 180,
        "wires": []
    },
    {
        "id": "9b75e9ed63840527",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 240,
        "wires": []
    },
    {
        "id": "a688d4ef7135b13e",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[12][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 1360,
        "wires": []
    },
    {
        "id": "5a4a99aef5c2031d",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[13][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 1420,
        "wires": []
    },
    {
        "id": "50c7eca9ed106a10",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload[14][0].time",
        "targetType": "msg",
        "statusVal": "payload[0][0]",
        "statusType": "auto",
        "x": 1070,
        "y": 1480,
        "wires": []
    },
    {
        "id": "6ac5ddee842f6352",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 16",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 1360,
        "wires": [
            [
                "d70542f2571e0523"
            ]
        ]
    },
    {
        "id": "48a9854a71b18b69",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP 1 - 16 - R",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1400,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "d70542f2571e0523",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[12][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1360,
        "wires": [
            [
                "48a9854a71b18b69"
            ]
        ]
    },
    {
        "id": "cb6cb3cfd6df143e",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 17",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 1420,
        "wires": [
            [
                "57c0483cedf380ec"
            ]
        ]
    },
    {
        "id": "9742a62e91d8ac71",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP 1 - 17 - S",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1400,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "57c0483cedf380ec",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[13][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1420,
        "wires": [
            [
                "9742a62e91d8ac71"
            ]
        ]
    },
    {
        "id": "ae0055c1ece3d313",
        "type": "link in",
        "z": "07f8a25c0830f34b",
        "name": "link in 18",
        "links": [
            "09103d9e8c44455a"
        ],
        "x": 1155,
        "y": 1480,
        "wires": [
            [
                "3aa410d50e54a66f"
            ]
        ]
    },
    {
        "id": "7406a169ba4ec813",
        "type": "trigger",
        "z": "07f8a25c0830f34b",
        "name": " LCP 1 - 18 - T",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "nul",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1400,
        "y": 1480,
        "wires": [
            []
        ]
    },
    {
        "id": "3aa410d50e54a66f",
        "type": "switch",
        "z": "07f8a25c0830f34b",
        "name": " ",
        "property": "payload[14][0].time",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "120",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1250,
        "y": 1480,
        "wires": [
            [
                "7406a169ba4ec813"
            ]
        ]
    },
    {
        "id": "9780eebf2a392da7",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 140,
        "wires": []
    },
    {
        "id": "b6465b776fcfe5ee",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 1120,
        "wires": []
    },
    {
        "id": "828ffb86d490eeb8",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": "function 5",
        "func": "msg.query = \"\";\nfor (let i = 0; i < msg.payload.length; i++) {\n    msg.query += \"SELECT * FROM \"+String(msg.payload[i].name)+\";\";\n}\nmsg.payload = msg.query.split(\";\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1760,
        "wires": [
            [
                "6f9474d2acf2bfcd"
            ]
        ]
    },
    {
        "id": "44552fd16791836d",
        "type": "inject",
        "z": "07f8a25c0830f34b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "query",
                "v": "show measurements",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 1760,
        "wires": [
            [
                "2f179b09a20ced09"
            ]
        ]
    },
    {
        "id": "2f179b09a20ced09",
        "type": "influxdb in",
        "z": "07f8a25c0830f34b",
        "influxdb": "45e8eb96811d44e0",
        "name": "",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 370,
        "y": 1760,
        "wires": [
            [
                "828ffb86d490eeb8"
            ]
        ]
    },
    {
        "id": "8bbd2ba26c5ffad5",
        "type": "debug",
        "z": "07f8a25c0830f34b",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1030,
        "y": 1820,
        "wires": []
    },
    {
        "id": "37c02ff5b134bce5",
        "type": "function",
        "z": "07f8a25c0830f34b",
        "name": "function 6",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 1760,
        "wires": [
            [
                "8bbd2ba26c5ffad5"
            ]
        ]
    }
]